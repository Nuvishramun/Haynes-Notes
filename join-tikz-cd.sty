%%
%% Join-tikz-cd
%%
%% A package to horizontally concatenate tikz-cd diagrams.
%% Hopefully should make diagram maitenence easier.
%% If vertical joins seem like they will be useful, I may at some point add them.
%%
%% It might be nice at some point to hand code the environ functionality I need, to reduce the dependencies
%%

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{join-tikz-cd}
\RequirePackage{tikz-cd}
\RequirePackage{environ}
\RequirePackage{etoolbox}

\let\@xp\expandafter
\let\@nx\noexpand
\let\@ag\aftergroup

\newcount\jtcd@rowskip
\jtcd@rowskip=1
\tikzcdset{
    intertext/.code={ %
        \pgfmathsetmacro{\pgfmatrixrowsep}{\pgfmatrixrowsep/2}%
        \jtcd@rowskip=2 %
        \global\let\jtcd@cursl\pgfmatrixendrow %
        \def\pgfmatrixendrow{\jtcd@cursl\jtcd@cursl}%
        \let\intertext\jtcd@intertextslsl%
    }
}
\newdimen\jtcd@dim
\def\jtcd@intertext#1{|[inner sep=0pt]|\jtcd@dim=\pgfmatrixcolumnsep\divide\jtcd@dim2\hskip-\jtcd@dim\smash{\textup{#1}}\hskip-\jtcd@dim\relax}
\def\jtcd@intertextslsl#1{\jtcd@cursl |[inner sep=0pt]| \jtcd@dim=\pgfmatrixcolumnsep\divide\jtcd@dim2\hskip-\jtcd@dim\smash{\textup{#1}}\hskip-\jtcd@dim\jtcd@cursl}


%
% Redefine a command from tikzcd so I can change the effect of u and d to go up or down two rows.
%
\def\tikzcd@parse#1{% parser for arrow direction argument
  \ifx#1r\advance\c@pgf@countb by1\else%
   \ifx#1d\advance\c@pgf@counta by\jtcd@rowskip\else%
    \ifx#1l\advance\c@pgf@countb by-1\else%
     \ifx#1u\advance\c@pgf@counta by-\jtcd@rowskip\else%
      \ifx#1\relax\let\tikzcd@temp\pgfutil@empty%
       \else\let\tikzcd@temp\pgfutil@gobble@until@relax\fi\fi\fi\fi\fi%
  \tikzcd@temp}



% diagram sep

\tikzcdset{
    diagram sep/.code={\tikzcd@sep{diagram}{#1}\global\let\diagramsep\diagramsep},
    diagrams={/tikz/commutative diagrams/diagram sep=normal},
    diagram sep/huge/.initial=column sep/huge/,
    diagram sep/large/.initial=+3.6em,
    diagram sep/normal/.initial=+2.4em,
    diagram sep/scriptsize/.initial=+1.8em,
    diagram sep/small/.initial=+1.2em,
    diagram sep/tiny/.initial=+0.6em
}

\tikzset{
    /tikz/diagram sep/.store in=\diagramsep,
    wavy/.style={decorate,decoration={snake,amplitude=.3mm,segment length=2.3mm,post length=0.5mm}}
}


% TODO: improve individual setting of diagram separation


%% From TUGBoat Volume 22 (2001), No. 4
%% https://www.tug.org/TUGboat/tb22-4/tb72perlS.pdf
%%

\def\clap#1{\hbox to 0pt{\hss#1\hss}}
\def\mathllap{\mathpalette\mathllapinternal}
\def\mathrlap{\mathpalette\mathrlapinternal}
\def\mathclap{\mathpalette\mathclapinternal}
\def\mathllapinternal#1#2{\llap{$\mathsurround=0pt#1{#2}$}}
\def\mathrlapinternal#1#2{\rlap{$\mathsurround=0pt#1{#2}$}}
\def\mathclapinternal#1#2{\clap{$\mathsurround=0pt#1{#2}$}}


\newbox\tempbox
\def\clapph#1#2{\sbox\tempbox{#1}\hbox to \wd\tempbox{\hss#2\hss}}
\def\mathclapph#1#2{\mathpalette\mathclapph@{{#1}{#2}}}
\def\mathclapph@#1#2{\clapph{$\mathsurround=0pt#1{\@firstoftwo#2}$}{$\mathsurround=0pt#1{\@secondoftwo#2}$}}

%%
%%


\newbox\tempbox
\newtoks\ctikzcdphantomleft
\newtoks\ctikzcdphantomright
\def\edgellap#1{\mathllap{#1{}}\global\ctikzcdphantomleft={\sbox\tempbox{$#1{}$}\wd\tempbox=-\wd\tempbox\hbox to \wd\tempbox{}}}%\hskip\wd\tempbox}}
\def\edgerlap#1{\mathrlap{{}#1}\hskip-1ex\global\ctikzcdphantomright={\phantom{${}#1$}}}

\newenvironment{ctikzcd}{\begin{center}\tikzcd}{\endtikzcd\the\ctikzcdphantomleft\the\ctikzcdphantomright\global\ctikzcdphantomleft={}\global\ctikzcdphantomright={}\end{center}}

%%%
%
%
%
%%%

\def\macroname{\@xp\@gobble\string}
\edef\theworddiagram{\macroname\diagram}

\newcount\jtcd@currow
\newcount\jtcd@maxamps
\newcount\jtcd@amps
\newtoks\jtcd@savedtoks
\newtoks\temptoks

% \@nil needs to have distinct expansion text so that \@ifnextchar can tell it apart from other macros
% Also, the only way that \@nil seems to get expanded is if the environment is empty. Hence:
\def\jtcd@nil{\PackageError{join-tikz-cd}{There is probably an empty jointikzcd environment}{}}

\bgroup\lccode`~=`&\lowercase{
    \newtoks\savedamps
    \def\padamps{%
        \ifnum\jtcd@amps>\jtcd@maxamps %
            \ifnum\jtcd@maxamps=-1%
                \global\jtcd@maxamps=\jtcd@amps  %
            \else %
                \PackageError{join-tikz-cd}{Either the top row must have the most columns or you must explicitly indicate how many columns are present in a subdiagram by saying \protect\diagram[n]}{}%
            \fi %
        \else %
            \loop\ifnum\jtcd@amps<\jtcd@maxamps%
                \@xp\savedamps\@xp{\the\savedamps ~}%
                \advance\jtcd@amps1%
            \repeat %
            \the\savedamps %
        \fi %
        \global\jtcd@amps=0%
    }

    \def\jtcd@prepnextrow{\@xp\jtcd@prepnextrow@\the\jtcd@savedtoks\@nil}
    \def\jtcd@prepnextrow@[#1]{\@ifnextchar|{\jtcd@prepnextrow@opts[#1]}{\jtcd@prepnextrow@noopts[#1]}}
    \def\jtcd@prepnextrow@opts#1|#2|#3\@nil{\jtcd@savedtoks{|#2|\jtcd@startrow#1#3}}
    \def\jtcd@prepnextrow@noopts#1\@nil{\jtcd@savedtoks{\jtcd@startrow#1}}

    \def\jtcdsl#1\diagram{\@ifnextchar\@nil{\jtcdsl@newrow{#1}}{\@ifnextchar[{\jtcdsl@continuerow{#1}}{\jtcdsl@continuerow{#1}[-1]}}} %}
    \def\jtcdsl@newrow#1{ %
        \edef\temp{\@nx\jtcd@savedtoks{\the\jtcd@savedtoks[\the\jtcd@maxamps]}}\temp %
        \@xp\global\@xp\jtcd@savedtoks\@xp{\the\jtcd@savedtoks#1\diagram}%
        \global\jtcd@amps=0 %
        \jtcd@prepnextrow %
        \@xp\global\@xp\jtcd@savedtoks\@xp{\@xp}%
        \@xp\jtcdsaved@pgfmatrixendrow %
        \the\jtcd@savedtoks %
    }
    \def\jtcdsl@continuerow#1[#2]{%
        \padamps %
        \edef\temp{\@nx\jtcd@savedtoks{\the\jtcd@savedtoks[\the\jtcd@maxamps]}}\temp %
        \@xp\global\@xp\jtcd@savedtoks\@xp{\the\jtcd@savedtoks#1\diagram}%
        \global\jtcd@maxamps=#2%
        \@ifnextchar[{~}{~[-\pgfmatrixcolumnsep+\diagramsep]}%
    }

    \def\jtcd@diagram{\@ifnextchar\@nil{\global\jtcd@amps=0\let\pgfmatrixendrow\jtcdsaved@pgfmatrixendrow\let\\\pgfmatrixendrow\@gobble}{\@ifnextchar[{\jtcd@diagram@}{\jtcd@diagram@[-1]}}} %}
    \def\jtcd@diagram@[#1]{\padamps\global\jtcd@maxamps=#1\@ifnextchar[{~}{~[-\pgfmatrixcolumnsep+\diagramsep]}}
    \def\jtcd@startrow{\@ifnextchar[{\jtcd@startrow@}{\jtcd@startrow@[-1]}} %}
    \def\jtcd@startrow@[#1]{\global\jtcd@maxamps=#1\global\jtcd@savedtoks{}}

    \def\jtcd@prepBODY{\@xp\jtcd@prepBODY@\BODY\@nil}
    \def\jtcd@prepBODY@#1{% removes the first token, checks that it actually is \diagram, and replaces it with \jtcd@startrow
        \edef\test{\macroname#1}%
        \ifx\test\theworddiagram\else \PackageError{join-tikz-cd}{The body of the jointikzcd environment must start with a \protect\diagram}{}\fi%
        \@ifnextchar|{\jtcd@prepBODY@opts}{\jtcd@prepBODY@noopts}%
    }
    \def\jtcd@prepBODY@opts|#1|#2\@nil{\def\BODY{|#1|\jtcd@startrow#2}}
    \def\jtcd@prepBODY@noopts#1\@nil{\def\BODY{\jtcd@startrow#1}}

    \NewEnviron{cjointikzcd}[1][]{%
        \let\jtcdsaved@pgfmatrixendrow\pgfmatrixendrow\let\pgfmatrixendrow\jtcdsl %
        \let\intertext\jtcd@intertext %
        \let\@nil\jtcd@nil %
        \let\diagram\jtcd@diagram %
        \pretocmd{\pgfmatrixnextcell}{\global\advance\jtcd@amps1}{}{} %
        \global\let~\pgfmatrixnextcell%
        \jtcd@prepBODY %
        \begin{center}
        \begin{tikzcd}[#1] %
            \BODY\diagram\@nil %
        \end{tikzcd} %
        \end{center} %
    }
}

\def\cjointikzcd{\catcode`&=\active \Collect@Body \env@cjointikzcd@parse}
